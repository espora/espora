<% content_for :appointments do %>

	<% if not flash[:notice].nil? and flash[:notice].is_a?(Hash) %>
	
		<!-- MENSAJES DEL HAVAD -->
		<% flash[:notice].each do | key, notice | %>
			<div class="alert-box success" style="width: 99%; position: relative; float: left; padding: 10px 0px 10px 10px;" onclick="$(this).remove();">
				<%= notice %>
			</div>
		<% end %>
	<% end %>

	<!-- CITAS CONTAINER -->
	<div style="padding-bottom: 20px;">

		<!-- CITAS -->
		<div class="pat-record-field" style="margin-top: 0px;">
			<div id="appointment-calendar-input"></div>
		</div>

		<!-- FORMULARIO PARA CREAR UNA CITA -->
		<div id="form-appointment-dialog">
			<%= form_tag create_appointment_path + "?tab=" + params[:tab], :id => "form-appointment", :class => "pure-form pure-form-stacked" do | appointment_form |%>

				<!-- FECHA -->
				<div style="width: 100%; position: relative; float: left; margin-left: 15px;">
					<%= label_tag "day" do %>Fecha:<% end %>
					<%= text_field_tag "day", "", id: "new-appointment-day", :required => true %>
				</div>

				<!-- HORA -->
				<div style="width: 100%; position: relative; float: left; margin-left: 15px;">
					<%= label_tag "hour" do %>Hora:<% end %>
					<%= text_field_tag "hour", "", id: "new-appointment-hour", :required => true %>
				</div>

				<!-- AÑADIR -->
				<div style="width: 100%; position: relative; float: left;">
					<%= submit_tag "Añadir Cita", :class => "pure-button pure-button-primary", :style => "float: right; margin-top: 10px; margin-right: 4%;" %>
				</div>
			<% end %>
		</div>

		<!-- FORMULARIOS DE CITAS -->
		<div style="display: none;">

			<!-- FORMULARIOS DE CITAS -->
			<%= form_tag appointment_update_date_path, :id => "form-update-appointment", :remote => true do |f| %>
				<%= hidden_field_tag "id", "", id: "id-update-appointment" %>
				<%= hidden_field_tag "date", "", id: "date-update-appointment" %>
			<% end %>

			<!-- FORMULARIO PARA ELIMINAR -->
			<%= form_tag appointment_delete_path, :id => "form-delete-appointment", :remote => true do |f| %>
				<%= hidden_field_tag "id", "", id: "id-delete-appointment" %>
			<% end %>
		</div>

		<script type="text/javascript">

			function evtCustomRender (event, element, view) {

				// Asociamos el id del evento con un atributo de la vista
				$(element[0]).attr("fc-event-id", event._id);
				$(element[0]).attr("appointment-id", event.idAppointment);

				// Agrega hrs
				$(element[0]).find(".fc-time").append(" hrs. ")

				// Click para abrir a la cita
				function openAppointment() {

					// Obtenemos el id del evento
					var eventId = $(this).parent().parent().attr("fc-event-id");

					// Obtnemos el evento asociado y abrimos la cita con el link
					$("#appointment-calendar-input").fullCalendar('clientEvents', function(evt) {
						if(evt._id === eventId) {
							window.location = evt.open;
						}
					});
				}
				$(element[0]).find(".fc-time").click(openAppointment);
				$(element[0]).find(".fc-title").click(openAppointment);

				// Obtenemos el contenido
				var content = $(element[0]).find(".fc-content")[0];

				// Creamos el span para eliminar
				var spanRemove = document.createElement("span");
				$(spanRemove).addClass("fc-remove");
				$(spanRemove).append("<i class='fa fa-times'></i>");
				$(spanRemove).click(function () {

					// Obtenemos el id de la cita
					var appointmentId = $(this).parent().parent().attr("appointment-id");

					// Lo ponemos en el formulario y lo enviamos
					$("#id-delete-appointment").val(appointmentId);
					$("#form-delete-appointment").submit();
				});

				// Lo agregamos al contenido
				$(content).append(spanRemove);
			}

			function dayClickHandler (moment, jsEvent, view) {

				// Armamos los datos para la cita
				var appointmentDate = "";
				var appointmentHour = "";
				$("#new-appointment-day").val("");
				$("#new-appointment-hour").val("");

				// Obtenemos la fecha
				var date = moment._d;

				// Armamos los datos para la cita
				// DIA
				appointmentDate = date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + (date.getDate() + 1);

				// HORA
				if(!moment._ambigTime) {
					appointmentDate = moment._i[0] + "-" + (moment._i[1] + 1) + "-" + moment._i[2];
					appointmentHour = moment._i[3] + ":" + moment._i[4];
				}

				// Los ponemos en los campos correspondientes
				$("#new-appointment-hour").val(appointmentHour);
				$("#new-appointment-day").val(appointmentDate);

				// Abrimos el dialogo
				$("#form-appointment-dialog").dialog("open");
			}

			function evtDropHandler (event, delta, revertFunc, jsEvent, ui, view) {

				// Obtenemos la fecha original del evento
				var date = new Date(fixDateStr(event.start._i));

				// Calculamos la diferencia de fechas
				date.setFullYear(date.getFullYear() + delta._data.years);
				date.setMonth((date.getMonth() + 1) + delta._data.months);
				date.setDate(date.getDate() + delta._data.days);
				date.setHours(date.getHours() + delta._data.hours);
				date.setMinutes(date.getMinutes() + delta._data.minutes);

				// Obtenemos la fecha
				var y = date.getFullYear(), m = date.getMonth(),
					d = date.getDate(), h = date.getHours(),
					min = date.getMinutes();

				var dateStr = y + "-" + m + "-" + d + " " + h + ":" + min;

				// Actualizamos los campos del formulario
				$("#id-update-appointment").val(event.idAppointment);
				$("#date-update-appointment").val(dateStr);

				// Enviamos
				$("#form-update-appointment").submit();
			}

			function fixDateStr (dateStr) {

				// Cambiamos la hora al estandar (Firefox te odio!)
				var tmp = dateStr.replace("T", " ");
				while(tmp.lastIndexOf("-") != -1) {
					tmp = tmp.replace("-", "/");
				}
				if(tmp.lastIndexOf(".000000") != -1) {
					tmp = tmp.replace(".000000", "");
				}
				return tmp;
			}

			// Hacemos dialogo el formulario para crear una nueva cita
			$("#form-appointment-dialog").dialog({
				autoOpen: false,
				modal: true,
				closeText: "hide",
				title: "Agregar cita",
				minWidth: 200
			});

			// Hacemos timepicker al input
			$("#new-appointment-hour").datetimepicker({
				lang: "es",
				datepicker: false,
				format: "H:i"
			});

			// Cuando se ha completado el borrado
			$("#form-delete-appointment, #form-update-appointment").bind("ajax:success", function (evt, data, status, xhr) {
				$("#appointment-calendar-input").fullCalendar("refetchEvents");
			});

			// Calendario
			$("#appointment-calendar-input").fullCalendar({
				lang: "es",
				timezone: "America/Mexico_City",
				weekends: false,
				editable: true,
				eventLimit: true,
				timeFormat: "HH:mm",
				eventAfterRender: evtCustomRender,
				dayClick: dayClickHandler,
				eventDrop: evtDropHandler,
				header: {
					left: 'prev,next today',
					center: 'title',
					right: 'month,agendaWeek,agendaDay'
				},
				events: {
					url: "<%= record_appointments_events_path(@patient_record) + '?tab=' + params[:tab] %>",
					className: "calendar-appointment"
				}
			});
		</script>
	</div>
<% end %>

<%= render template: "patient_records/open_record_tab" %>
