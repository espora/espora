<% content_for :statistics do %>
	
	<div id="sidebar-header-tab">
		<div id="sidebar-tab">
			<ul id="sidebar-tabs-header">
				<li><a href="#request_on_attended">Número de solicitudes y de alumnos atendidos</a></li>
				<li><a href="#sex_requests">Sexo de solicitantes</a></li>
				<li><a href="#sex_attended">Sexo de atendidos</a></li>
				<li><a href="#family_structure">Estructura Familiar</a></li>
				<li><a href="#career_requests">Carrera de solicitantes</a></li>
				<li><a href="#career_attended">Carrera de atendidos</a></li>
				<li><a href="#semester_requests">Semestre de solicitantes</a></li>
				<li><a href="#semester_attended">Semestre de atendidos</a></li>
				<li><a href="#failed_subjects_requests">Materias reprobadas de solicitudes</a></li>
				<li><a href="#failed_subjects_attended">Materias reprobadas de atendidas</a></li>
				<li><a href="#dropouts_semester">Bajas al semestre</a></li>
				<li><a href="#dropouts">Bajas</a></li>
				<li><a href="#reasons">Motivos de consulta</a></li>
				<li><a href="#symptoms">Signos y síntomas</a></li>
				<li><a href="#affected_areas">Áreas afectadas</a></li>
				<li><a href="#improved_areas">Áreas mejoradas</a></li>
				<li><a href="#condition_before">Estado emocional al comenzar</a></li>
				<li><a href="#condition_after">Estado emocional al finalizar</a></li>
				<li><a href="#aid">Nivel de ayuda</a></li>
				<li><a href="#advise">Nivel de recomendación</a></li>
				<li><a href="#how_met">Como conoció</a></li>
				<li><a href="#rating">Calificación</a></li>
			</ul>
		</div>

		<div id="container">
			<div id="request_on_attended"></div>
			<div id="sex_requests"></div>
			<div id="sex_attended"></div>
			<div id="family_structure"></div>
			<div id="career_requests"></div>
			<div id="career_attended"></div>
			<div id="semester_requests"></div>
			<div id="semester_attended"></div>
			<div id="failed_subjects_requests"></div>
			<div id="failed_subjects_attended"></div>
			<div id="dropouts_semester"></div>
			<div id="dropouts"></div>
			<div id="reasons"></div>
			<div id="symptoms"></div>
			<div id="affected_areas"></div>
			<div id="improved_areas"></div>
			<div id="condition_before"></div>
			<div id="condition_after"></div>
			<div id="aid"></div>
			<div id="advise"></div>
			<div id="how_met"></div>
			<div id="rating"></div>
		</div>
	</div>

	<script type="text/javascript">

		/* CARACTERISTICAS DE LAS GRÁFICAS
		 * 
		 * Tiene la siguiente estructura:
		 * "nombredelagrafica": {
		 * 		options: // Object - Opciones de la grafica,
		 *  	chartType: // String - Tipo de la grafica,
		 *  	buildDataTable: // Function - Debe regresar la tabla de datos
		 *	}  
		 */
		var chartsSettings = {
			"request_on_attended": {
				options: {
					width: 900,
					height: 400,
					title: 'Numero de Solicitudes y Alumnos Atendidos',
					curveType: 'function',
					legend: { position: 'bottom' }
				},
				chartType: "linechart",
				buildDataTable: function (data) {
					var dataTable = [['String', 'Numero de Solicitudes Recibidas', 'Numero de Alumnos Atendidos']];
					for (var key in data) {
						var row = ['Semestre ' + key, data[key].request, data[key].attended];
						dataTable.push(row);
					}

					return google.visualization.arrayToDataTable(dataTable);
				}
			},
			"sex_requests": {
				options: {
					title: 'Sexo de Solicitudes Recibidas',
					width: 800,
					height: 400,
				},
				chartType: "piechart",
				buildDataTable: function (data) {
					var dataTable = [
						['Genero', 'Personas'],
						['Hombre',  data.m],
						['Mujer' ,  data.f]
					];
					return google.visualization.arrayToDataTable(dataTable);
				}
			},
			"sex_attended": {
				options: {
					title: 'Sexo de Solicitudes Atendidas',
					width: 800,
					height: 400,
				},
				chartType: "piechart",
				buildDataTable: function (data) {
					var dataTable = [
						['Genero', 'Personas'],
						['Hombre',  data.m],
						['Mujer' ,  data.f]
					];
					return google.visualization.arrayToDataTable(dataTable);
				}
			},
			/**"family_structure":{

			}**/
			"career_requests": {
				options: {
					title: 'Carrera de Procedencia de Alumnos Solicitantes',
	        		width: 900,
	        		height: 400,
				},
				chartType: "piechart",
				buildDataTable: function (data) {
					var dataTable = [
						['Carrera', 'Personas'],
						['Actuaria', data.actuaria],
						['Biologia', data.biologia],
						['Ciencias Ambientales', data.ciencias_ambientales],
						['Ciencias de la Computación', data.ciencias_de_la_computacion],
						['Ciencias de la Tierra', data.ciencias_de_la_tierra],
						['Física', data.fisica],
						['Física Biomédica', data.fisica_biomedica],
						['Manejo Sustentable de Zonas Costeras', data.manejo_sustentable_de_zonas_costeras],
						['Matemáticas', data.matematicas]
					];

					return google.visualization.arrayToDataTable(dataTable);
				}
			},
			"career_attended": {
				options: {
					title: 'Carrera de Procedencia de Alumnos Atendidos',
					width: 900,
					height: 400,
				},
				chartType: "piechart",
				buildDataTable: function (data) {
					var dataTable = [
						['Carrera', 'Personas'],
						['Actuaria', data.actuaria],
						['Biologia', data.biologia],
						['Ciencias Ambientales', data.ciencias_ambientales],
						['Ciencias de la Computación', data.ciencias_de_la_computacion],
						['Ciencias de la Tierra', data.ciencias_de_la_tierra],
						['Física', data.fisica],
						['Física Biomédica', data.fisica_biomedica],
						['Manejo Sustentable de Zonas Costeras', data.manejo_sustentable_de_zonas_costeras],
						['Matemáticas', data.matematicas]
					];

					return google.visualization.arrayToDataTable(dataTable);
				}
			},
			/**"semester_requests": {

			},**/
			/**"semester_attended": {
	
			},**/
			/**"failed_subjects_requests": {

			},**/
			/**"failed_subjects_attended": {

			},**/
			/**"dropouts_semester": {

			},**/
			"dropouts": {
				options: {
					title: 'Reporte de Bajas',
					width: 900,
					height: 400,					
				},
				chartType: "piechart",
				buildDataTable: function (data) {
					var dataTable = [
						['Baja','Personas'],
						['Abandono', data.Abandono],
						['Canalizado', data.Canalizado],
						['Finalizado', data.Finalizado],
						['Interrupción', data.Interrupción]
					];
					return google.visualization.arrayToDataTable(dataTable);
				}
			},
			/**"reasons": {

			},**/
			/**"symptoms": {

			}**/
			/**"affected_areas": {

			},**/
			/**"improved_areas": {

			},**/
			/**"condition_before": {
	
			},**/
			/**"condition_after": {

			},
			"aid": {

			},
			"advise": {

			},
			"how_met": {

			},
			"rating": {

			}**/
		};

		/**
		 * Dibuja una grafica con GoogleCharts.
		 * 
		 * @param {Object} data - Los datos que vienen del servidor (JSON).
		 * @param {Object} chartSetting - Objeto que tiene la configuración de la grafica.
		 * @param {DOM Element} element - Elemento DOM donde se pone la gráfica.
		 */
		function displayChart (data, chartSetting, element) {

			// Construimos la tabla de datos
			var dataTable = chartSetting.buildDataTable(data);

			// Creamos la grafica
			var chart = undefined;
			switch(chartSetting.chartType) {
				case "linechart":
					chart = new google.visualization.LineChart(element[0]);
					break;
				case "piechart":
					chart = new google.visualization.PieChart(element[0]);
					break;
			}

			// La dibujamos
			chart.draw(dataTable, chartSetting.options);
		}

		// Inicializamos el paquete goolecharts
		google.load('visualization', '1.0', {'packages':['corechart']});
		google.setOnLoadCallback(function() {

			// Costruimos las pestañas
			$("#sidebar-header-tab").tabs({
				beforeActivate: function (event, ui) {

					// Obtenemos el panel que se mando a llamar
					var newPanel = ui.newPanel;

					// Obtenemos la grafica que quieren
					var chartName = newPanel.attr("id");

					// Armamos la url
					var urlData = "<%= chart_path %>?chart=" + chartName;

					// Petición ajax de los datos de la gráfica
					$.ajax({
						method: "GET",
						url: urlData,
						success: function (data) {

							// Si no pedimos bien la grafica
							if(data === "undefined chart") {
								console.log("Grafica mala");
							}
							else {

								// Dibujamos la grafica
								displayChart(data, chartsSettings[chartName], newPanel);
							}
						}
					});
				}
			});
		});
	</script>

<% end %>

<%= render template: "therapists/profile_tab" %>